'use client'

import { useState } from 'react'
import { StatCard, Button } from '@/app/components/ui'
import { CategoryFilter, MenuGrid, NutritionModal } from './components'
import { menuCategories, menuItems, quickActions } from '@/lib/data/menu-management'

export default function MenuManagementPage() {
  const [selectedCategory, setSelectedCategory] = useState<string>('all')
  const [nutritionModalOpen, setNutritionModalOpen] = useState(false)
  const [hoveredCard, setHoveredCard] = useState<string | null>(null)
  const [selectedItem, setSelectedItem] = useState<{ id: string; title: string } | null>(null)

  const handleActionClick = (itemId: string, action: string) => {
    console.log(`Action: ${action} for item: ${itemId}`)
    
    // Beslenme analizi modalƒ±nƒ± a√ß
    if (action.includes('Beslenme') || action.includes('Besin')) {
      const item = menuItems.find(i => i.id === itemId)
      if (item) {
        setSelectedItem({ id: item.id, title: item.title })
        setNutritionModalOpen(true)
      }
    }
  }

  const handleQuickAction = (actionId: string) => {
    console.log(`Quick action: ${actionId}`)
  }

  const categories = [
    { id: 'all', title: 'T√ºm√º', icon: 'üçΩÔ∏è' },
    { id: 'recipes', title: 'Tarifler', icon: 'ü•ò' },
    { id: 'menus', title: 'Men√ºler', icon: 'üìù' },
    { id: 'ingredients', title: 'Malzemeler', icon: 'ü•¨' },
    { id: 'costs', title: 'Maliyetler', icon: 'üí∞' }
  ]

  const menuItems = [
    {
      id: 'recipes-management',
      title: 'Tarif Y√∂netimi',
      icon: 'recipe',
      count: '247',
      description: 'T√ºm tariflerinizi ve kategorileri y√∂netin',
      category: 'recipes',
      actions: ['Yeni Tarif Ekle', 'Tarifleri D√ºzenle', 'Kategoriler & Etiketler', 'Arama & Filtre', 'Tarif ≈ûablonlarƒ±']
    },
    {
      id: 'menu-planning',
      title: 'Men√º Planlama',
      icon: 'calendar',
      count: '8',
      description: 'Haftalƒ±k ve aylƒ±k men√º planlarƒ±',
      category: 'menus',
      actions: ['Yeni Plan Olu≈ütur', '≈ûablon Kullan', 'Takvim G√∂r√ºn√ºm√º', 'Plan Kopyala', 'Sezonluk Planlar']
    },
    {
      id: 'ingredients-stock',
      title: 'Stok Takibi',
      icon: 'box',
      count: '156',
      description: 'Malzeme stok durumu',
      category: 'stock',
      actions: ['Stok Ekle', 'Minimum Stok Ayarƒ±', 'Tedarik√ßi Bilgileri', 'Stok Hareketi', 'Envanter Raporu']
    },
    {
      id: 'cost-calculation',
      title: 'Maliyet Hesaplama',
      icon: 'calculator',
      count: '45',
      description: 'Re√ßete ve porsiyon maliyetleri',
      category: 'costs',
      actions: ['Maliyet Analizi', 'Kar Marjƒ± Hesapla', 'Fiyat √ñnerisi', 'Maliyet Kar≈üƒ±la≈ütƒ±rma', 'Maliyet Raporu']
    },
    {
      id: 'market-prices',
      title: 'Piyasa Fiyatlarƒ±',
      icon: 'chart',
      count: '89',
      description: 'Market, toptancƒ± ve piyasa fiyat kar≈üƒ±la≈ütƒ±rmasƒ±',
      category: 'ingredients',
      actions: ['Market Fiyatlarƒ±', 'Toptancƒ± Fiyatlarƒ±', 'Fiyat Kar≈üƒ±la≈ütƒ±r', 'En Ucuz Noktalar', 'Fiyat Takibi']
    },
    {
      id: 'recipe-measurements',
      title: 'Re√ßete ve Gramajlar',
      icon: 'scale',
      count: '189',
      description: 'Kalori, besin deƒüerleri ve porsiyon gramajlarƒ±',
      category: 'recipes',
      actions: ['Kalori Hesaplama', 'Besin Deƒüerleri', 'Gramaj Standardƒ±', 'Alerjen Bilgisi', 'Diyet Uyumluluƒüu'],
      hasModal: true
    }
  ]

  const filteredItems = selectedCategory === 'all' 
    ? menuItems 
    : menuItems.filter(item => item.category === selectedCategory)

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-black p-6">
      
      {/* Header */}
      <div className="mb-8">
        <h1 className="text-4xl font-bold bg-gradient-to-r from-white via-gray-100 to-gray-300 bg-clip-text text-transparent mb-2">
          Men√º Y√∂netimi
        </h1>
        <p className="text-gray-400">Tarifler, men√ºler, malzemeler ve maliyet y√∂netimi</p>
      </div>

      {/* Category Filter */}
      <div className="flex flex-wrap gap-3 mb-8">
        {categories.map((category) => (
          <button
            key={category.id}
            onClick={() => setSelectedCategory(category.id)}
            className={`
              flex items-center space-x-2 px-4 py-2 rounded-full transition-all duration-300
              ${selectedCategory === category.id 
                ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-lg' 
                : 'bg-gray-800/40 text-gray-300 hover:bg-gray-700/40 border border-gray-600'
              }
            `}
          >
            <span>{category.icon}</span>
            <span className="font-medium">{category.title}</span>
          </button>
        ))}
      </div>

      {/* Menu Items Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredItems.map((item) => (
          <div
            key={item.id}
            className={`
              relative group cursor-pointer transition-all duration-500 ease-out
              hover:scale-105 hover:-translate-y-2
              ${hoveredCard === item.id ? 'shadow-2xl shadow-blue-500/20' : 'shadow-lg'}
            `}
            onMouseEnter={() => setHoveredCard(item.id)}
            onMouseLeave={() => setHoveredCard(null)}
            onClick={() => item.hasModal && setSelectedModal(item.id)}
          >
            {/* Main Card */}
            <div className="relative overflow-hidden rounded-3xl bg-gray-800/40 backdrop-blur-xl border border-gray-700/50">
              
              {/* Header Section */}
              <div className="bg-gray-800/90 p-6 text-white">
                <div className="flex items-center justify-between mb-3">
                  <div className="text-4xl text-blue-400">{getIcon(item.icon)}</div>
                  <div className="text-right">
                    <div className="text-2xl font-bold">{item.count}</div>
                  </div>
                </div>
                <h3 className="text-xl font-bold mb-2">{item.title}</h3>
                <p className="text-gray-300 text-sm">{item.description}</p>
              </div>

              {/* Actions Section */}
              <div className="p-6">
                <h4 className="text-white font-semibold mb-3">Hƒ±zlƒ± ƒ∞≈ülemler:</h4>
                <div className="space-y-2">
                  {item.actions.map((action, index) => (
                    <button
                      key={index}
                      className="w-full p-3 text-left rounded-lg bg-gray-700/30 hover:bg-gray-600/40 text-gray-300 hover:text-white transition-all duration-300 flex items-center justify-between group"
                    >
                      <span className="text-sm font-medium">{action}</span>
                      <svg 
                        className="w-4 h-4 opacity-0 group-hover:opacity-100 transition-opacity" 
                        fill="none" 
                        stroke="currentColor" 
                        viewBox="0 0 24 24"
                      >
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                      </svg>
                    </button>
                  ))}
                </div>
              </div>

              {/* Hover Glow Effect */}
              <div className="absolute inset-0 bg-blue-500/10 opacity-0 group-hover:opacity-20 transition-opacity duration-500 pointer-events-none"></div>
            </div>
          </div>
        ))}
      </div>

      {/* Quick Stats Footer */}
      <div className="mt-12 grid grid-cols-1 md:grid-cols-5 gap-4">
        <div className="bg-gray-800/40 backdrop-blur-xl rounded-2xl p-4 border border-gray-700/50 text-center">
          <div className="text-2xl font-bold text-blue-400">247</div>
          <div className="text-gray-400 text-sm">Toplam Tarif</div>
        </div>
        <div className="bg-gray-800/40 backdrop-blur-xl rounded-2xl p-4 border border-gray-700/50 text-center">
          <div className="text-2xl font-bold text-green-400">8</div>
          <div className="text-gray-400 text-sm">Aktif Men√º</div>
        </div>
        <div className="bg-gray-800/40 backdrop-blur-xl rounded-2xl p-4 border border-gray-700/50 text-center">
          <div className="text-2xl font-bold text-orange-400">156</div>
          <div className="text-gray-400 text-sm">Malzeme Stok</div>
        </div>
        <div className="bg-gray-800/40 backdrop-blur-xl rounded-2xl p-4 border border-gray-700/50 text-center">
          <div className="text-2xl font-bold text-yellow-400">89</div>
          <div className="text-gray-400 text-sm">Piyasa Fiyatƒ±</div>
        </div>
        <div className="bg-gray-800/40 backdrop-blur-xl rounded-2xl p-4 border border-gray-700/50 text-center">
          <div className="text-2xl font-bold text-purple-400">‚Ç∫24.5K</div>
          <div className="text-gray-400 text-sm">Aylƒ±k Maliyet</div>
        </div>
      </div>

      {/* Nutrition & Portion Modal */}
      {selectedModal === 'nutrition-portion' && (
        <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4">
          <div className="bg-gray-800 rounded-3xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            
            {/* Modal Header */}
            <div className="bg-gradient-to-r from-indigo-500 to-purple-600 p-6 text-white rounded-t-3xl">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <span className="text-3xl">üçΩÔ∏è</span>
                  <div>
                    <h2 className="text-2xl font-bold">Beslenme & Porsiyon Y√∂netimi</h2>
                    <p className="text-white/80">Kalori, besin deƒüerleri ve porsiyon kontrol√º</p>
                  </div>
                </div>
                <button 
                  onClick={() => setSelectedModal(null)}
                  className="text-white/80 hover:text-white transition-colors"
                >
                  <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
            </div>

            {/* Modal Content */}
            <div className="p-6">
              {/* Tab Navigation */}
              <div className="flex flex-wrap gap-2 mb-6">
                {[
                  { id: 'nutrition', title: 'Beslenme Bilgileri', icon: 'üìä' },
                  { id: 'portions', title: 'Porsiyon Kontrol√º', icon: '‚öñÔ∏è' },
                  { id: 'allergens', title: 'Alerjen Takibi', icon: '‚ö†Ô∏è' },
                  { id: 'diet', title: 'Diyet Uyumluluƒüu', icon: 'ü•ó' }
                ].map((tab) => (
                  <button
                    key={tab.id}
                    className="flex items-center space-x-2 px-4 py-2 bg-gray-700/50 hover:bg-gray-600/50 rounded-lg text-gray-300 hover:text-white transition-colors"
                  >
                    <span>{tab.icon}</span>
                    <span>{tab.title}</span>
                  </button>
                ))}
              </div>

              {/* Content Grid */}
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                
                {/* Kalori Hesaplama */}
                <div className="bg-gray-700/30 rounded-2xl p-6">
                  <div className="flex items-center space-x-3 mb-4">
                    <span className="text-2xl">üî•</span>
                    <h3 className="text-white font-semibold">Kalori Hesaplama</h3>
                  </div>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <span className="text-gray-400">Toplam Tarif</span>
                      <span className="text-white font-medium">247</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-gray-400">Kalori Hesaplanmƒ±≈ü</span>
                      <span className="text-green-400 font-medium">189</span>
                    </div>
                    <button className="w-full mt-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg text-white transition-colors">
                      Toplu Hesapla
                    </button>
                  </div>
                </div>

                {/* Besin Deƒüerleri */}
                <div className="bg-gray-700/30 rounded-2xl p-6">
                  <div className="flex items-center space-x-3 mb-4">
                    <span className="text-2xl">ü•ó</span>
                    <h3 className="text-white font-semibold">Besin Deƒüerleri</h3>
                  </div>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <span className="text-gray-400">Protein</span>
                      <span className="text-blue-400">25.4g ort.</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-gray-400">Karbonhidrat</span>
                      <span className="text-green-400">45.2g ort.</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-gray-400">Yaƒü</span>
                      <span className="text-yellow-400">18.7g ort.</span>
                    </div>
                  </div>
                </div>

                {/* Porsiyon Standardƒ± */}
                <div className="bg-gray-700/30 rounded-2xl p-6">
                  <div className="flex items-center space-x-3 mb-4">
                    <span className="text-2xl">‚öñÔ∏è</span>
                    <h3 className="text-white font-semibold">Porsiyon Standardƒ±</h3>
                  </div>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <span className="text-gray-400">Standart Porsiyonlar</span>
                      <span className="text-white">156</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-gray-400">Uyumluluk Oranƒ±</span>
                      <span className="text-green-400">95%</span>
                    </div>
                    <button className="w-full mt-4 py-2 bg-purple-600 hover:bg-purple-700 rounded-lg text-white transition-colors">
                      Standartlarƒ± G√ºncelle
                    </button>
                  </div>
                </div>

                {/* Alerjen Takibi */}
                <div className="bg-gray-700/30 rounded-2xl p-6">
                  <div className="flex items-center space-x-3 mb-4">
                    <span className="text-2xl">‚ö†Ô∏è</span>
                    <h3 className="text-white font-semibold">Alerjen Takibi</h3>
                  </div>
                  <div className="space-y-2">
                    {['Gl√ºten', 'S√ºt', 'Yumurta', 'Fƒ±ndƒ±k', 'Balƒ±k'].map((allergen, index) => (
                      <div key={index} className="flex items-center justify-between">
                        <span className="text-gray-400">{allergen}</span>
                        <span className="text-xs bg-red-500/20 text-red-400 px-2 py-1 rounded-full">
                          {Math.floor(Math.random() * 50) + 10} tarif
                        </span>
                      </div>
                    ))}
                  </div>
                </div>

                {/* Diyet Uyumluluƒüu */}
                <div className="bg-gray-700/30 rounded-2xl p-6">
                  <div className="flex items-center space-x-3 mb-4">
                    <span className="text-2xl">üå±</span>
                    <h3 className="text-white font-semibold">Diyet Uyumluluƒüu</h3>
                  </div>
                  <div className="space-y-2">
                    {[
                      { name: 'Vegan', count: 45 },
                      { name: 'Vejetaryen', count: 78 },
                      { name: 'Glutensiz', count: 34 },
                      { name: 'Ketojenik', count: 23 },
                      { name: 'D√º≈ü√ºk Kalori', count: 67 }
                    ].map((diet, index) => (
                      <div key={index} className="flex items-center justify-between">
                        <span className="text-gray-400">{diet.name}</span>
                        <span className="text-xs bg-green-500/20 text-green-400 px-2 py-1 rounded-full">
                          {diet.count} tarif
                        </span>
                      </div>
                    ))}
                  </div>
                </div>

                {/* Raporlar */}
                <div className="bg-gray-700/30 rounded-2xl p-6">
                  <div className="flex items-center space-x-3 mb-4">
                    <span className="text-2xl">üìà</span>
                    <h3 className="text-white font-semibold">Raporlar</h3>
                  </div>
                  <div className="space-y-3">
                    <button className="w-full py-2 bg-gray-600/50 hover:bg-gray-500/50 rounded-lg text-white transition-colors text-sm">
                      üìä Beslenme Raporu
                    </button>
                    <button className="w-full py-2 bg-gray-600/50 hover:bg-gray-500/50 rounded-lg text-white transition-colors text-sm">
                      ‚öñÔ∏è Porsiyon Analizi
                    </button>
                    <button className="w-full py-2 bg-gray-600/50 hover:bg-gray-500/50 rounded-lg text-white transition-colors text-sm">
                      ‚ö†Ô∏è Alerjen Raporu
                    </button>
                  </div>
                </div>
              </div>

              {/* Action Buttons */}
              <div className="flex justify-end space-x-4 mt-8 pt-6 border-t border-gray-700">
                <button 
                  onClick={() => setSelectedModal(null)}
                  className="px-6 py-3 bg-gray-600 hover:bg-gray-700 rounded-xl text-white transition-colors"
                >
                  Kapat
                </button>
                <button className="px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-600 hover:opacity-90 rounded-xl text-white transition-opacity">
                  Deƒüi≈üiklikleri Kaydet
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}